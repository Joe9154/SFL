// Generated by view binder compiler. Do not edit!
package com.example.sfl_mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sfl_mobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityManagerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView agentsImageView;

  @NonNull
  public final TextView agentsTextView;

  @NonNull
  public final LinearLayout bodyLayout;

  @NonNull
  public final ImageView completedImageView;

  @NonNull
  public final TextView completedTextView;

  @NonNull
  public final ImageView driversImageView;

  @NonNull
  public final TextView driversTextView;

  @NonNull
  public final LinearLayout leftLayout;

  @NonNull
  public final ImageView logoImageView;

  @NonNull
  public final LinearLayout lowerLayout;

  @NonNull
  public final LinearLayout middleLayout;

  @NonNull
  public final ImageView parcelsImageView;

  @NonNull
  public final ImageView pendingImageView;

  @NonNull
  public final TextView pendingTextView;

  @NonNull
  public final LinearLayout rightLayout;

  @NonNull
  public final Button signOutButton;

  @NonNull
  public final LinearLayout splittingLowerLayout;

  @NonNull
  public final LinearLayout splittingMiddleLayout;

  @NonNull
  public final TextView totalTextView;

  @NonNull
  public final LinearLayout upperLayout;

  @NonNull
  public final TextView userTextView;

  private ActivityManagerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView agentsImageView, @NonNull TextView agentsTextView,
      @NonNull LinearLayout bodyLayout, @NonNull ImageView completedImageView,
      @NonNull TextView completedTextView, @NonNull ImageView driversImageView,
      @NonNull TextView driversTextView, @NonNull LinearLayout leftLayout,
      @NonNull ImageView logoImageView, @NonNull LinearLayout lowerLayout,
      @NonNull LinearLayout middleLayout, @NonNull ImageView parcelsImageView,
      @NonNull ImageView pendingImageView, @NonNull TextView pendingTextView,
      @NonNull LinearLayout rightLayout, @NonNull Button signOutButton,
      @NonNull LinearLayout splittingLowerLayout, @NonNull LinearLayout splittingMiddleLayout,
      @NonNull TextView totalTextView, @NonNull LinearLayout upperLayout,
      @NonNull TextView userTextView) {
    this.rootView = rootView;
    this.agentsImageView = agentsImageView;
    this.agentsTextView = agentsTextView;
    this.bodyLayout = bodyLayout;
    this.completedImageView = completedImageView;
    this.completedTextView = completedTextView;
    this.driversImageView = driversImageView;
    this.driversTextView = driversTextView;
    this.leftLayout = leftLayout;
    this.logoImageView = logoImageView;
    this.lowerLayout = lowerLayout;
    this.middleLayout = middleLayout;
    this.parcelsImageView = parcelsImageView;
    this.pendingImageView = pendingImageView;
    this.pendingTextView = pendingTextView;
    this.rightLayout = rightLayout;
    this.signOutButton = signOutButton;
    this.splittingLowerLayout = splittingLowerLayout;
    this.splittingMiddleLayout = splittingMiddleLayout;
    this.totalTextView = totalTextView;
    this.upperLayout = upperLayout;
    this.userTextView = userTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityManagerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityManagerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_manager, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityManagerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.agentsImageView;
      ImageView agentsImageView = ViewBindings.findChildViewById(rootView, id);
      if (agentsImageView == null) {
        break missingId;
      }

      id = R.id.agentsTextView;
      TextView agentsTextView = ViewBindings.findChildViewById(rootView, id);
      if (agentsTextView == null) {
        break missingId;
      }

      id = R.id.bodyLayout;
      LinearLayout bodyLayout = ViewBindings.findChildViewById(rootView, id);
      if (bodyLayout == null) {
        break missingId;
      }

      id = R.id.completedImageView;
      ImageView completedImageView = ViewBindings.findChildViewById(rootView, id);
      if (completedImageView == null) {
        break missingId;
      }

      id = R.id.completedTextView;
      TextView completedTextView = ViewBindings.findChildViewById(rootView, id);
      if (completedTextView == null) {
        break missingId;
      }

      id = R.id.driversImageView;
      ImageView driversImageView = ViewBindings.findChildViewById(rootView, id);
      if (driversImageView == null) {
        break missingId;
      }

      id = R.id.driversTextView;
      TextView driversTextView = ViewBindings.findChildViewById(rootView, id);
      if (driversTextView == null) {
        break missingId;
      }

      id = R.id.leftLayout;
      LinearLayout leftLayout = ViewBindings.findChildViewById(rootView, id);
      if (leftLayout == null) {
        break missingId;
      }

      id = R.id.logoImageView;
      ImageView logoImageView = ViewBindings.findChildViewById(rootView, id);
      if (logoImageView == null) {
        break missingId;
      }

      id = R.id.lowerLayout;
      LinearLayout lowerLayout = ViewBindings.findChildViewById(rootView, id);
      if (lowerLayout == null) {
        break missingId;
      }

      id = R.id.middleLayout;
      LinearLayout middleLayout = ViewBindings.findChildViewById(rootView, id);
      if (middleLayout == null) {
        break missingId;
      }

      id = R.id.parcelsImageView;
      ImageView parcelsImageView = ViewBindings.findChildViewById(rootView, id);
      if (parcelsImageView == null) {
        break missingId;
      }

      id = R.id.pendingImageView;
      ImageView pendingImageView = ViewBindings.findChildViewById(rootView, id);
      if (pendingImageView == null) {
        break missingId;
      }

      id = R.id.pendingTextView;
      TextView pendingTextView = ViewBindings.findChildViewById(rootView, id);
      if (pendingTextView == null) {
        break missingId;
      }

      id = R.id.rightLayout;
      LinearLayout rightLayout = ViewBindings.findChildViewById(rootView, id);
      if (rightLayout == null) {
        break missingId;
      }

      id = R.id.signOutButton;
      Button signOutButton = ViewBindings.findChildViewById(rootView, id);
      if (signOutButton == null) {
        break missingId;
      }

      id = R.id.splittingLowerLayout;
      LinearLayout splittingLowerLayout = ViewBindings.findChildViewById(rootView, id);
      if (splittingLowerLayout == null) {
        break missingId;
      }

      id = R.id.splittingMiddleLayout;
      LinearLayout splittingMiddleLayout = ViewBindings.findChildViewById(rootView, id);
      if (splittingMiddleLayout == null) {
        break missingId;
      }

      id = R.id.totalTextView;
      TextView totalTextView = ViewBindings.findChildViewById(rootView, id);
      if (totalTextView == null) {
        break missingId;
      }

      id = R.id.upperLayout;
      LinearLayout upperLayout = ViewBindings.findChildViewById(rootView, id);
      if (upperLayout == null) {
        break missingId;
      }

      id = R.id.userTextView;
      TextView userTextView = ViewBindings.findChildViewById(rootView, id);
      if (userTextView == null) {
        break missingId;
      }

      return new ActivityManagerBinding((ConstraintLayout) rootView, agentsImageView,
          agentsTextView, bodyLayout, completedImageView, completedTextView, driversImageView,
          driversTextView, leftLayout, logoImageView, lowerLayout, middleLayout, parcelsImageView,
          pendingImageView, pendingTextView, rightLayout, signOutButton, splittingLowerLayout,
          splittingMiddleLayout, totalTextView, upperLayout, userTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
